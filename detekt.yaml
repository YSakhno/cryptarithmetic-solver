#
# This file is a configuration file for Detekt, which overrides default configuration of some rules.  In particular,
# most of the rules that are disabled in default configuration are enabled here, but also some other rules have their
# configuration tweaked to better serve the needs and style of the application.
#
# Only rules that have to be overridden are explicitly mentioned in this file; rules not explicitly mentioned will have
# their default values retained.
#

build:
  maxIssues: 0
  excludeCorrectable: false

config:
  validation: true
  warningsAsErrors: true
  checkExhaustiveness: false  # Do not care about omitted sections in this file - they will be set to default values

comments:
  DeprecatedBlockTag:
    active: true
  EndOfSentenceFormat:
    active: true
  KDocReferencesNonPublicProperty:
    active: true
  UndocumentedPublicClass:
    active: true
    excludes: []  # Public and protected classes should be documented everywhere
    searchInProtectedClass: true  # Protected classes are 'public' as far as documentation is concerned
  UndocumentedPublicFunction:
    active: true
    excludes: []  # Same as with classes
    searchProtectedFunction: true
  UndocumentedPublicProperty:
    active: true
    excludes: []  # Same as with classes and functions
    searchProtectedProperty: true

complexity:
  ComplexInterface:
    active: true
  MethodOverloading:
    active: true
  NestedBlockDepth:
    threshold: 5
  NestedScopeFunctions:
    active: true
    functions: ["kotlin.apply", "kotlin.run", "kotlin.with"]
  TooManyFunctions:
    # The point of private functions is to extract logic out of other functions, reducing complexity of the latter,
    # which directly influences NestedBlockDepth (see above).  Having 'private' functions outside the file/class
    # violates encapsulation (since they cannot be private anymore).  Because of this, private functions must be
    # excluded from the total count (i.e. ignored).
    ignorePrivate: true

coroutines:
  GlobalCoroutineUsage:
    active: true
  SuspendFunWithCoroutineScopeReceiver:
    active: true

exceptions:
  NotImplementedDeclaration:
    active: true
  ObjectExtendsThrowable:
    active: true
  ThrowingExceptionInMain:
    active: true

naming:
  BooleanPropertyNaming:
    active: true
    allowedPattern: "^(?:is|are|has|was|were)"  # Also allow "was"/"were" (past of "is"/"are" respectively)
    # Don't care about Boolean variables/properties names in testing code
    excludes: ["**/test/**", "**/androidTest/**", "**/commonTest/**", "**/jvmTest/**", "**/jsTest/**", "**/iosTest/**"]
  ForbiddenClassName:
    active: true
    forbiddenName: ["Default", "Impl"]
  FunctionMaxLength:
    active: true
    maximumFunctionNameLength: 42  # a nice number (also should be large enough for most if not all purposes)
  FunctionMinLength:
    active: true
    ignoreFunction: ["get", "let", "map", "put", "run", "set"]
    minimumFunctionNameLength: 4
  LambdaParameterNaming:
    active: true
  NonBooleanPropertyPrefixedWithIs:
    active: true
  VariableMaxLength:
    active: true

performance:
  CouldBeSequence:
    active: true
  UnnecessaryPartOfBinaryExpression:
    active: true

potential-bugs:
  CastToNullableType:
    active: true
  Deprecation:
    active: true
  DontDowncastCollectionTypes:
    active: true
  ExitOutsideMain:
    active: true
  MissingPackageDeclaration:
    active: true
  NullCheckOnMutableProperty:
    active: true
  NullableToStringCall:
    active: true
  UnconditionalJumpStatementInLoop:
    active: true
  UnnecessaryNotNullCheck:
    active: true

style:
  AlsoCouldBeApply:
    active: true
  CanBeNonNullable:
    active: true
  CascadingCallWrapping:
    active: true
    includeElvis: false  # Do not like the looks of Elvis operator being wrapped in chained calls
  ClassOrdering:
    active: true
  CollapsibleIfStatements:
    active: true
  BracesOnWhenStatements:
    active: true
    multiLine: necessary
  DataClassContainsFunctions:
    active: true
  DataClassShouldBeImmutable:
    active: true
  EqualsOnSignatureLine:
    active: true
  ExplicitCollectionElementAccessMethod:
    active: true
  ExpressionBodySyntax:
    active: true
    includeLineWrapping: true
  MagicNumber:
    ignoreCompanionObjectPropertyDeclaration: false
    ignoreNamedArgument: false
    ignoreExtensionFunctions: false
  MandatoryBracesLoops:
    active: true
  MultilineLambdaItParameter:
    active: true
  MultilineRawStringIndentation:
    active: true
  NoTabs:
    active: true
  NullableBooleanCheck:
    active: true
  OptionalUnit:
    active: true
  PreferToOverPairSyntax:
    active: true
  RedundantExplicitType:
    active: true
  RedundantVisibilityModifierRule:
    active: true
  ReturnCount:
    max: 3  # The default of 2 seems arbitrary anyway, so 3 should be fine too
    excludeGuardClauses: true  # By my standards, returns in guard clauses should not count
  SpacingBetweenPackageAndImports:
    active: true
  TrailingWhitespace:
    active: true
  UnderscoresInNumericLiterals:
    active: true
    acceptableLength: 3
  UnnecessaryAnnotationUseSiteTarget:
    active: true
  UnnecessaryBackticks:
    active: true
  UnnecessaryInnerClass:
    active: true
  UntilInsteadOfRangeTo:
    active: true
  UnusedImports:
    active: true
  UseDataClass:
    active: true
  UseEmptyCounterpart:
    active: true
  UseIfEmptyOrIfBlank:
    active: true
  UseIfInsteadOfWhen:
    active: true
  UseSumOfInsteadOfFlatMapSize:
    active: true
  WildcardImport:
    excludeImports: []
